---
stages:
  - build
  - prepare
  - deploy

variables:
  FF_USE_FASTZIP: "true"
  ARTIFACT_COMPRESSION_LEVEL: fastest # can also be set to fastest, fast, slow and slowest
  CACHE_COMPRESSION_LEVEL: fast
  TRANSFER_METER_FREQUENCY: 1s
  GIT_DEPTH: 1

  image_ansible: cytopia/ansible:latest-tools
  docker_compose_version: v2.2.3

.build:
  stage: build
  script: |
    set -eux
    echo "Build"
    docker build -f ci_cd/Dockerfile . -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME

.deploy_prepare:
  variables:
    ANSIBLE_HOST_KEY_CHECKING: "False"
  before_script: 
    - eval `ssh-agent -s`
    - echo -n "$SSH_PRIVATE_KEY" | ssh-add -

.prepare_host:
  stage: prepare
  image: $image_ansible
  script: >
    ansible-playbook -i ci_cd/ansible/inventory/hosts.yml ci_cd/ansible/prepare_host.yml -l $CI_COMMIT_REF_NAME
    -e "docker_compose_version='$docker_compose_version'"

.deploy:
  stage: deploy
  image: $image_ansible
  script: >
    ansible-playbook -i ci_cd/ansible/inventory/hosts.yml ci_cd/ansible/deploy.yml -l $CI_COMMIT_REF_NAME
    -e "CI_COMMIT_REF_NAME='$CI_COMMIT_REF_NAME'"
    -e "CI_REGISTRY_IMAGE='$CI_REGISTRY_IMAGE'"
    -e "CI_JOB_TOKEN='$CI_JOB_TOKEN'"
    -e "CI_PROJECT_NAME='$CI_PROJECT_NAME'"
    -e "CI_REGISTRY='$CI_REGISTRY'"

build:
  extends:
    - .build
  dependencies: []
  only:
    - main
    - stage
    - develop
  #when: manual

prepare_host:
  extends:
    - .deploy_prepare
    - .prepare_host
  only:
    - main
    - stage
    - develop
  #when: manual

deploy:
  extends:
    - .deploy_prepare
    - .deploy
  dependencies:
    - build
  only:
    - main
    - stage
    - develop
  #when: manual
