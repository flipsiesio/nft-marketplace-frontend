@import '../../../assets/styles/variables.scss';
@import '../../../assets/styles/mixins.scss';

.wrap {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;

  @include flexbox;
  flex-direction: column;
}

@include forTablet {
  $card-width: 40px;
  $card-height: 60px;
  $card-offset: 10px;
}

.card {
  position: absolute;
  width: $card-width;
  height: $card-height;
  top: 45%;
  left: 50%;
  transition: all .5s ease;
  will-change: transform;

  &.enter {
    opacity: 0;
    top: 0;
    left: 50%;
    transform: translateY(0) translateX(-50%) !important;
  }

  &.enterActive,
  &.exitActive {
    transition: all 200ms ease-in;
  }

  @for $i from 1 through $card-amount {
    &:nth-child(#{$i}) {
      $number: ($i - 1) - ($card-amount / 2) + $corrector;
      $offset: ($card-width + $card-offset) * $number;
      transform: translateY(-45%) translateX(calc(-50% + #{$offset}));
    }
  }

  @include forTablet {
    width: $card-tablet-width;
    height: $card-tablet-height;

    @for $i from 1 through $card-amount {
      &:nth-child(#{$i}) {
        $number: ($i - 1) - ($card-amount / 2) + $corrector;
        $offset: ($card-tablet-width + $card-tablet-offset) * $number;
        transform: translateY(-45%) translateX(calc(-50% + #{$offset}));
      }
    }
  }

  @include forPhone {
    width: $card-phone-width;
    height: $card-phone-height;

    @for $i from 1 through $card-amount {
      &:nth-child(#{$i}) {
        $number: ($i - 1) - ($card-amount / 2) + $corrector;
        $offset: ($card-phone-width + $card-phone-offset) * $number;
        transform: translateY(-45%) translateX(calc(-50% + #{$offset}));
      }
    }
  }
}

.jackpot {
  @include flexbox;
  flex-direction: column;
  margin-top: calc(#{$card-height} + 15px);

  @include forPhone {
    margin-top: $card-phone-height + 5px;
    font-size: 14px;
  }
}

.jackpotUsd {
  opacity: 0.6;
}

.royalFlush {
  text-transform: capitalize;
}
